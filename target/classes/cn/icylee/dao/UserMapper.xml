<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.icylee.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.icylee.bean.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="portrait" property="portrait" jdbcType="VARCHAR" />
    <result column="grow" property="grow" jdbcType="INTEGER" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="VARCHAR" />
    <result column="updatetime" property="updatetime" jdbcType="VARCHAR" />
  </resultMap>

  <select id="getUserList" parameterType="cn.icylee.bean.TableParameter" resultType="cn.icylee.bean.User">
    SELECT * FROM
      ( SELECT * FROM user
        WHERE nickname LIKE '%${nickname}%' AND
          `status` LIKE '%${status}%'
          LIMIT #{page}, #{limit} ) u
    ORDER BY uid ${sort}
  </select>
  
  <select id="getArticleUp" parameterType="INTEGER" resultType="INTEGER">
    SELECT count(*)
    FROM article
    RIGHT JOIN prefer ON article.id=prefer.dataid AND prefer.datasource="article"
    WHERE article.userid=#{uid}
  </select>

  <select id="getCommentUp" parameterType="INTEGER" resultType="INTEGER">
    SELECT count(*)
    from `comment`
    RIGHT JOIN prefer on `comment`.id=prefer.dataid and prefer.datasource="comment"
    where `comment`.userid=#{id}
  </select>

  <select id="getFollowUser" parameterType="INTEGER" resultType="cn.icylee.bean.User">
    SELECT `user`.uid, `user`.nickname, `user`.summary, `user`.portrait, `user`.grow, `user`.`status`
    FROM `user`
    LEFT JOIN follow ON follow.userid=#{uid} AND follow.datasource="user"
    WHERE `user`.uid=follow.dataid
    ORDER BY follow.createtime DESC
    LIMIT 6
  </select>

  <select id="getFansUser" parameterType="INTEGER" resultType="cn.icylee.bean.User">
    SELECT `user`.uid, `user`.nickname, `user`.summary, `user`.portrait, `user`.grow, `user`.`status`
    FROM `user`
    LEFT JOIN follow ON follow.dataid=#{uid} AND follow.datasource="user"
    WHERE `user`.uid=follow.userid
    ORDER BY follow.createtime DESC
    LIMIT 6
  </select>

  <select id="getFollowUser2" parameterType="INTEGER" resultType="cn.icylee.bean.User">
    SELECT `user`.uid, `user`.nickname, `user`.summary, `user`.portrait, `user`.grow, `user`.`status`
    FROM `user`
    LEFT JOIN follow ON follow.userid=#{uid} AND follow.datasource="user"
    WHERE `user`.uid=follow.dataid
    ORDER BY follow.createtime DESC
  </select>

  <select id="getFansUser2" parameterType="INTEGER" resultType="cn.icylee.bean.User">
    SELECT `user`.uid, `user`.nickname, `user`.summary, `user`.portrait, `user`.grow, `user`.`status`
    FROM `user`
    LEFT JOIN follow ON follow.dataid=#{uid} AND follow.datasource="user"
    WHERE `user`.uid=follow.userid
    ORDER BY follow.createtime DESC
  </select>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, nickname, password, summary, portrait, grow, integral, status, createtime, updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.icylee.bean.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.icylee.bean.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.icylee.bean.User" >
    insert into user (uid, nickname, password,
                      summary, portrait, grow,
                      integral, status, createtime,
                      updatetime)
    values (#{uid,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
            #{summary,jdbcType=VARCHAR}, #{portrait,jdbcType=VARCHAR}, #{grow,jdbcType=INTEGER},
            #{integral,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{createtime,jdbcType=VARCHAR},
            #{updatetime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.icylee.bean.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="summary != null" >
        summary,
      </if>
      <if test="portrait != null" >
        portrait,
      </if>
      <if test="grow != null" >
        grow,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null" >
        #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="grow != null" >
        #{grow,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.icylee.bean.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null" >
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.portrait != null" >
        portrait = #{record.portrait,jdbcType=VARCHAR},
      </if>
      <if test="record.grow != null" >
        grow = #{record.grow,jdbcType=INTEGER},
      </if>
      <if test="record.integral != null" >
        integral = #{record.integral,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set uid = #{record.uid,jdbcType=INTEGER},
    nickname = #{record.nickname,jdbcType=VARCHAR},
    password = #{record.password,jdbcType=VARCHAR},
    summary = #{record.summary,jdbcType=VARCHAR},
    portrait = #{record.portrait,jdbcType=VARCHAR},
    grow = #{record.grow,jdbcType=INTEGER},
    integral = #{record.integral,jdbcType=INTEGER},
    status = #{record.status,jdbcType=VARCHAR},
    createtime = #{record.createtime,jdbcType=VARCHAR},
    updatetime = #{record.updatetime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.icylee.bean.User" >
    update user
    <set >
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null" >
        portrait = #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="grow != null" >
        grow = #{grow,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.icylee.bean.User" >
    update user
    set nickname = #{nickname,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        summary = #{summary,jdbcType=VARCHAR},
        portrait = #{portrait,jdbcType=VARCHAR},
        grow = #{grow,jdbcType=INTEGER},
        integral = #{integral,jdbcType=INTEGER},
        status = #{status,jdbcType=VARCHAR},
        createtime = #{createtime,jdbcType=VARCHAR},
        updatetime = #{updatetime,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>