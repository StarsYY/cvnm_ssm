<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.icylee.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.icylee.bean.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="portrait" property="portrait" jdbcType="VARCHAR" />
    <result column="grow" property="grow" jdbcType="INTEGER" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="isadmin" property="isadmin" jdbcType="INTEGER" />
    <result column="isdel" property="isdel" jdbcType="INTEGER" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="finaltime" property="finaltime" jdbcType="TIMESTAMP" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>

  <select id="getUserList" parameterType="cn.icylee.bean.TableParameter" resultType="cn.icylee.bean.User">
    SELECT * FROM
      ( SELECT * FROM user
        WHERE nickname LIKE '%${nickname}%' AND
          `status` LIKE '%${status}%'
          LIMIT #{page}, #{limit} ) u
    ORDER BY uid ${sort}
  </select>

  <select id="getArticleUp" parameterType="INTEGER" resultType="INTEGER">
    SELECT count(*)
    FROM article
           RIGHT JOIN prefer ON article.id=prefer.dataid AND prefer.datasource="article"
    WHERE article.userid=#{uid}
  </select>

  <select id="getCommentUp" parameterType="INTEGER" resultType="INTEGER">
    SELECT count(*)
    from `comment`
           RIGHT JOIN prefer on `comment`.id=prefer.dataid and prefer.datasource="comment"
    where `comment`.userid=#{id}
  </select>

  <select id="getFollowUser" parameterType="INTEGER" resultType="cn.icylee.bean.User">
    SELECT `user`.uid, `user`.nickname, `user`.summary, `user`.portrait, `user`.grow, `user`.`status`
    FROM `user`
           LEFT JOIN follow ON follow.userid=#{uid} AND follow.datasource="user"
    WHERE `user`.uid=follow.dataid
    ORDER BY follow.createtime DESC
      LIMIT 6
  </select>

  <select id="getExpert" resultType="cn.icylee.bean.User">
    SELECT `user`.* from `user`
                           JOIN verify on verify.userid = `user`.uid and verify.`position` = '专家' and verify.`status` = 1
  </select>

  <select id="getFansUser" parameterType="INTEGER" resultType="cn.icylee.bean.User">
    SELECT `user`.uid, `user`.nickname, `user`.summary, `user`.portrait, `user`.grow, `user`.`status`
    FROM `user`
           LEFT JOIN follow ON follow.dataid=#{uid} AND follow.datasource="user"
    WHERE `user`.uid=follow.userid
    ORDER BY follow.createtime DESC
      LIMIT 6
  </select>

  <select id="getFollowUser2" parameterType="cn.icylee.bean.Index" resultType="cn.icylee.bean.User">
    SELECT `user`.uid, `user`.nickname, `user`.summary, `user`.portrait, `user`.grow, `user`.`status`
    FROM `user`
           LEFT JOIN follow ON follow.userid=#{uid} AND follow.datasource="user"
    WHERE `user`.uid=follow.dataid
    ORDER BY follow.createtime DESC
      LIMIT #{page}, #{limit}
  </select>

  <select id="getFansUser2" parameterType="cn.icylee.bean.Index" resultType="cn.icylee.bean.User">
    SELECT `user`.uid, `user`.nickname, `user`.summary, `user`.portrait, `user`.grow, `user`.`status`
    FROM `user`
           LEFT JOIN follow ON follow.dataid=#{uid} AND follow.datasource="user"
    WHERE `user`.uid=follow.userid
    ORDER BY follow.createtime DESC
      LIMIT #{page}, #{limit}
  </select>

  <select id="getSearchUser" parameterType="java.lang.String" resultType="cn.icylee.bean.User">
    SELECT `user`.uid, `user`.nickname, `user`.summary, `user`.portrait, `user`.grow, `user`.`status`
    FROM verify
           LEFT JOIN `user` ON `user`.uid=verify.userid
    WHERE verify.position = '讲师' and verify.`status` = 1 and `user`.status = '启用' and `user`.isdel = 0
    <if test="nickname != null and nickname != ''"> and `user`.nickname like '%${nickname}%'</if>
  </select>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, nickname, password, summary, portrait, grow, integral, status, sex, name, phone,
    email, isadmin, isdel, starttime, finaltime, createtime, updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.icylee.bean.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.icylee.bean.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.icylee.bean.User" useGeneratedKeys="true" keyProperty="uid" keyColumn="uid" >
    insert into user (uid, nickname, password,
                      summary, portrait, grow,
                      integral, status, sex,
                      name, phone, email,
                      isadmin, isdel, starttime,
                      finaltime, createtime, updatetime
    )
    values (#{uid,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
            #{summary,jdbcType=VARCHAR}, #{portrait,jdbcType=VARCHAR}, #{grow,jdbcType=INTEGER},
            #{integral,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
            #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
            #{isadmin,jdbcType=INTEGER}, #{isdel,jdbcType=INTEGER}, #{starttime,jdbcType=TIMESTAMP},
            #{finaltime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
           )
  </insert>
  <insert id="insertSelective" parameterType="cn.icylee.bean.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="summary != null" >
        summary,
      </if>
      <if test="portrait != null" >
        portrait,
      </if>
      <if test="grow != null" >
        grow,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="isadmin != null" >
        isadmin,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="finaltime != null" >
        finaltime,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null" >
        #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="grow != null" >
        #{grow,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isadmin != null" >
        #{isadmin,jdbcType=INTEGER},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="finaltime != null" >
        #{finaltime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.icylee.bean.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null" >
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.portrait != null" >
        portrait = #{record.portrait,jdbcType=VARCHAR},
      </if>
      <if test="record.grow != null" >
        grow = #{record.grow,jdbcType=INTEGER},
      </if>
      <if test="record.integral != null" >
        integral = #{record.integral,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.isadmin != null" >
        isadmin = #{record.isadmin,jdbcType=INTEGER},
      </if>
      <if test="record.isdel != null" >
        isdel = #{record.isdel,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null" >
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finaltime != null" >
        finaltime = #{record.finaltime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set uid = #{record.uid,jdbcType=INTEGER},
    nickname = #{record.nickname,jdbcType=VARCHAR},
    password = #{record.password,jdbcType=VARCHAR},
    summary = #{record.summary,jdbcType=VARCHAR},
    portrait = #{record.portrait,jdbcType=VARCHAR},
    grow = #{record.grow,jdbcType=INTEGER},
    integral = #{record.integral,jdbcType=INTEGER},
    status = #{record.status,jdbcType=VARCHAR},
    sex = #{record.sex,jdbcType=VARCHAR},
    name = #{record.name,jdbcType=VARCHAR},
    phone = #{record.phone,jdbcType=VARCHAR},
    email = #{record.email,jdbcType=VARCHAR},
    isadmin = #{record.isadmin,jdbcType=INTEGER},
    isdel = #{record.isdel,jdbcType=INTEGER},
    starttime = #{record.starttime,jdbcType=TIMESTAMP},
    finaltime = #{record.finaltime,jdbcType=TIMESTAMP},
    createtime = #{record.createtime,jdbcType=TIMESTAMP},
    updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.icylee.bean.User" >
    update user
    <set >
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null" >
        portrait = #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="grow != null" >
        grow = #{grow,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isadmin != null" >
        isadmin = #{isadmin,jdbcType=INTEGER},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="finaltime != null" >
        finaltime = #{finaltime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.icylee.bean.User" >
    update user
    set nickname = #{nickname,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        summary = #{summary,jdbcType=VARCHAR},
        portrait = #{portrait,jdbcType=VARCHAR},
        grow = #{grow,jdbcType=INTEGER},
        integral = #{integral,jdbcType=INTEGER},
        status = #{status,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        isadmin = #{isadmin,jdbcType=INTEGER},
        isdel = #{isdel,jdbcType=INTEGER},
        starttime = #{starttime,jdbcType=TIMESTAMP},
        finaltime = #{finaltime,jdbcType=TIMESTAMP},
        createtime = #{createtime,jdbcType=TIMESTAMP},
        updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>