<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.icylee.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="cn.icylee.bean.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="articleid" property="articleid" jdbcType="INTEGER" />
    <result column="comid" property="comid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>

  <select id="getCommentTotal" parameterType="cn.icylee.bean.TableParameter" resultType="java.lang.Integer">
    SELECT count(*) FROM comment
    <where>
      <if test="comment != null and comment != ''">AND comment LIKE '%${comment}%'</if>
      <if test="cids != null and cids != ''">AND FIND_IN_SET(userid, '${cids}')</if>
      <if test="ids != null and ids != ''">AND FIND_IN_SET(articleid, '${ids}')</if>
      <if test="status != null and status != ''">AND status LIKE '%${status}%'</if>
    </where>
  </select>

  <select id="getCommentList" parameterType="cn.icylee.bean.TableParameter" resultType="cn.icylee.bean.Comment">
    SELECT * FROM
      ( SELECT * FROM comment WHERE 1 = 1
        <if test="comment != null and comment != ''">AND comment LIKE '%${comment}%'</if>
        <if test="cids != null and cids != ''">AND FIND_IN_SET(userid, '${cids}')</if>
        <if test="ids != null and ids != ''">AND FIND_IN_SET(articleid, '${ids}')</if>
        <if test="status != null and status != ''">AND status LIKE '%${status}%'</if>
        LIMIT #{page}, #{limit} ) u
    ORDER BY id ${sort}
  </select>

  <delete id="deleteComment" parameterType="java.lang.String">
    delete from comment where id in(${ids})
  </delete>

  <select id="getMyReply" parameterType="cn.icylee.bean.Index" resultType="cn.icylee.bean.Comment">
    SELECT `comment`.*, article.title AS article, u1.nickname AS username, u1.portrait AS avatar, u2.nickname AS reviewName
    FROM `comment`
           LEFT JOIN article ON article.id=`comment`.articleid
           LEFT JOIN `user` u1 ON u1.uid=`comment`.userid
           LEFT JOIN `user` u2 ON u2.uid=article.userid
    WHERE `comment`.userid = #{uid} AND `comment`.`status` = 1 and article.isdel = 0
    ORDER BY `comment`.createtime DESC
    LIMIT #{page}, #{limit}
  </select>

  <select id="getMyReplyRe" parameterType="java.lang.Integer" resultType="cn.icylee.bean.Comment">
    SELECT `comment`.*, u1.nickname AS username
    FROM `comment`
           LEFT JOIN `user` u1 ON u1.uid=`comment`.userid
           LEFT JOIN article ON article.id=`comment`.articleid
    WHERE `comment`.id = #{comid} AND `comment`.`status` = 1 and article.isdel = 0
  </select>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, comment, userid, articleid, comid, status, createtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.icylee.bean.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.icylee.bean.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.icylee.bean.Comment" >
    insert into comment (id, comment, userid,
                         articleid, comid, status,
                         createtime)
    values (#{id,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER},
            #{articleid,jdbcType=INTEGER}, #{comid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
            #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.icylee.bean.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="articleid != null" >
        articleid,
      </if>
      <if test="comid != null" >
        comid,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="articleid != null" >
        #{articleid,jdbcType=INTEGER},
      </if>
      <if test="comid != null" >
        #{comid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.icylee.bean.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.articleid != null" >
        articleid = #{record.articleid,jdbcType=INTEGER},
      </if>
      <if test="record.comid != null" >
        comid = #{record.comid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set id = #{record.id,jdbcType=INTEGER},
    comment = #{record.comment,jdbcType=VARCHAR},
    userid = #{record.userid,jdbcType=INTEGER},
    articleid = #{record.articleid,jdbcType=INTEGER},
    comid = #{record.comid,jdbcType=INTEGER},
    status = #{record.status,jdbcType=INTEGER},
    createtime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.icylee.bean.Comment" >
    update comment
    <set >
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="articleid != null" >
        articleid = #{articleid,jdbcType=INTEGER},
      </if>
      <if test="comid != null" >
        comid = #{comid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.icylee.bean.Comment" >
    update comment
    set comment = #{comment,jdbcType=VARCHAR},
        userid = #{userid,jdbcType=INTEGER},
        articleid = #{articleid,jdbcType=INTEGER},
        comid = #{comid,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER},
        createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>